name: Build with nix
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build-with-nix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build cuenv with nix
        run: nix build .#cuenv
      - name: Show cuenv version
        run: ./result/bin/cuenv --version
      - name: Build project with nix
        run: |
          # Use nix develop to build with proper environment
          nix develop --command cargo build --release
      - name: Run tests with nix
        run: |
          # Use nix develop to run tests
          nix develop --command cargo test
      - name: Check formatting with nix
        run: |
          # Use nix develop to check formatting
          nix develop --command treefmt --fail-on-change
      - name: Run clippy with nix
        run: |
          # Use nix develop to run clippy
          nix develop --command cargo clippy -- -D warnings
      - name: Verify the built binary works
        run: |
          # Test the built binary
          ./target/release/cuenv --version
          ./target/release/cuenv export
  test-basic-functionality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build cuenv with nix
        run: nix build .#cuenv
      - name: Test cuenv basic commands
        run: |
          # Show cuenv info
          ./result/bin/cuenv --version
          ./result/bin/cuenv export

          # Test running commands through cuenv
          ./result/bin/cuenv run echo "Hello from cuenv!"
          ./result/bin/cuenv run pwd
