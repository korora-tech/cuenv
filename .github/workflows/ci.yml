name: ci
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
env:
  CARGO_TERM_COLOR: always
  CUENV_ENV: ci
permissions:
  id-token: write
  contents: read
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable, beta]
    steps:
      - uses: actions/checkout@v4
      - name: nix-install
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: nix-cache
        uses: cachix/cachix-action@v15
        with:
          name: cuenv
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush: ${{ matrix.rust != 'stable' }}
      - name: nix-build
        run: nix build .#cuenv
      - name: nix-flake-check
        run: nix flake check --print-build-logs
      - name: cuenv-test-examples
        run: |
          nix develop --command ./scripts/test-examples.sh
      - name: cuenv-test-integrations
        run: |
          nix develop --command cargo nextest run --test test_examples
  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: nix-install
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: nix-cache
        uses: cachix/cachix-action@v15
        with:
          name: cuenv
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: nix-build
        run: |
          nix build .#cuenv
