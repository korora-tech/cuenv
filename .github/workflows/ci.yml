name: ci
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
env:
  CARGO_TERM_COLOR: always
  CUENV_ENV: ci
permissions:
  id-token: write
  contents: read
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable, beta]
    steps:
      - uses: actions/checkout@v4
      - name: nix-install
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: nix-cache
        uses: cachix/cachix-action@v15
        with:
          name: cuenv
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush: ${{ matrix.rust != 'stable' }}
      - name: nix-build
        run: nix build .#cuenv
      - name: nix-flake-checks
        run: |
          # Run formatting, clippy and unit tests (sandbox-compatible)
          # Note: only formatting and build checks run for all attributes
          nix flake check --print-build-logs -L
      - name: cuenv-test-all
        run: |
          # Run ALL tests (unit + integration) with network access
          nix develop --command cargo nextest run --profile ci --no-fail-fast
        continue-on-error: true
      - name: cuenv-test-examples
        run: |
          # Use the built binary from nix build
          mkdir -p target/debug
          cp result/bin/cuenv target/debug/

          # To ensure we test the local CUE schema, not a remote one,
          # we manually populate the CUE module cache. This avoids
          # running `cue mod get`.
          # CUE's cache path is cue/cue.mod/pkg/
          export CUE_CACHE_DIR="examples/cue.mod/pkg"
          export SCHEMA_PATH="$CUE_CACHE_DIR/github.com/rawkode/cuenv@v0"
          mkdir -p "$SCHEMA_PATH"
          cp -r cue/* "$SCHEMA_PATH/"

          # Run the example tests
          ./scripts/test-examples.sh
        continue-on-error: true
  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: nix-install
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: nix-cache
        uses: cachix/cachix-action@v15
        with:
          name: cuenv
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: nix-build
        run: |
          nix build .#cuenv
