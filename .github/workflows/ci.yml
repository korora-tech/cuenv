name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  CUENV_ENV: ci

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable, beta]

    steps:
    - uses: actions/checkout@v4

    - name: nix-install
      uses: cachix/install-nix-action@v27
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: nix-cache
      uses: cachix/cachix-action@v15
      with:
        name: cuenv
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        skipPush: ${{ matrix.rust != 'stable' }}

    - name: nix-build
      run: nix build .#cuenv

    - name: cuenv-test
      run: nix develop --command cargo test --verbose

    - name: cuenv-test-examples
      run: |
        nix develop --command ./scripts/test-examples.sh

    - name: cuenv-test-integrations
      run: |
        nix develop --command cargo test --test test_examples

    - name: cuenv-format
      run: nix develop --command cargo fmt -- --check
      if: matrix.rust == 'stable'

    - name: cuenv-lint
      run: nix develop --command cargo clippy -- -D warnings
      if: matrix.rust == 'stable'

  coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: nix-install
      uses: cachix/install-nix-action@v27
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: nix-cache
      uses: cachix/cachix-action@v15
      with:
        name: cuenv
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: nix-build
      run: |
        nix build .#cuenv

    - name: tarpaulin-install
      run: nix develop --command cargo install cargo-tarpaulin

    - name: tarpaulin-coverage
      run: nix develop --command cargo tarpaulin --out Xml

    - name: codecov-upload
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./cobertura.xml
        fail_ci_if_error: false

  release:
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: linux-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: darwin-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: darwin-arm64

    steps:
    - uses: actions/checkout@v4

    - name: nix-install
      uses: cachix/install-nix-action@v27
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: nix-cache
      uses: cachix/cachix-action@v15
      with:
        name: cuenv
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: nix-build
      run: nix build .#cuenv

    - name: cuenv-release
      run: |
        mkdir -p dist
        cp result/bin/cuenv dist/
        cp README.md LICENSE dist/
        tar -czf cuenv-${{ matrix.suffix }}.tar.gz -C dist .

    - name: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: cuenv-${{ matrix.suffix }}
        path: cuenv-${{ matrix.suffix }}.tar.gz
