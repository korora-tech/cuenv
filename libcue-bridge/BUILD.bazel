# BUILD file for libcue-bridge
load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("@rules_rust//rust:defs.bzl", "rust_library")
load("@rules_cc//cc:defs.bzl", "cc_library")

# Go library that wraps CUE
go_library(
    name = "cue_go",
    srcs = glob(["*.go"]),
    cgo = True,
    cdeps = [":cue_c_api"],
    importpath = "github.com/rawkode/cuenv/libcue-bridge",
    visibility = ["//visibility:private"],
    deps = [
        "@io_cue_lang_cue//cue:go_default_library",
        "@io_cue_lang_cue//cue/cuecontext:go_default_library",
        "@io_cue_lang_cue//cue/format:go_default_library",
        "@io_cue_lang_cue//cue/load:go_default_library",
    ],
)

# C API exposed by Go
cc_library(
    name = "cue_c_api",
    hdrs = ["cue.h"],
    visibility = ["//visibility:private"],
)

# Rust FFI wrapper
rust_library(
    name = "cue_bridge",
    srcs = glob(["src/**/*.rs"]),
    crate_features = ["build-binary"],
    edition = "2021",
    visibility = ["//visibility:public"],
    deps = [
        "@crates//:anyhow",
        "@crates//:libc",
        "@crates//:once_cell",
        "@crates//:serde",
        "@crates//:serde_json",
        "@crates//:thiserror",
    ],
)

# Platform-specific configurations
config_setting(
    name = "linux",
    constraint_values = ["@platforms//os:linux"],
)

config_setting(
    name = "macos", 
    constraint_values = ["@platforms//os:macos"],
)